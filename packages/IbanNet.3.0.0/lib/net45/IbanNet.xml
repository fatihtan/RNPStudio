<?xml version="1.0"?>
<doc>
    <assembly>
        <name>IbanNet</name>
    </assembly>
    <members>
        <member name="M:IbanNet.Extensions.Partition``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
            <summary>
            Splits a given <paramref name="sequence"/> into partitions of specified <paramref name="size"/>.
            </summary>
            <remarks>
            If the number of elements in the <paramref name="sequence"/> is not an exact multiple of <paramref name="size"/>, the last partition of the returned partition set is smaller.
            </remarks>
            <typeparam name="TSource">The type of the sequence elements.</typeparam>
            <param name="sequence">The sequence to partition.</param>
            <param name="size">The size of each partition to split the <paramref name="sequence"/> into.</param>
            <returns>an enumerable of partitions</returns>
        </member>
        <member name="M:IbanNet.Extensions.PartitionOn(System.String,System.Char[])">
            <summary>
            Splits a given <paramref name="sequence"/> into partitions when encountering any of the <paramref name="markers"/>.
            </summary>
            <param name="sequence">The sequence to partition.</param>
            <param name="markers">A list of markers to partition on.</param>
            <returns>an enumerable of partitions</returns>
        </member>
        <member name="T:IbanNet.Iban">
            <summary>
            Represents an IBAN.
            </summary>
        </member>
        <member name="T:IbanNet.Iban.Formats">
            <summary>
            The supported IBAN output formats.
            </summary>
        </member>
        <member name="F:IbanNet.Iban.Formats.Partitioned">
            <summary>
            Partitions an IBAN into 4 character segments separated with a space.
            </summary>
        </member>
        <member name="F:IbanNet.Iban.Formats.Flat">
            <summary>
            An IBAN without whitespace.
            </summary>
        </member>
        <member name="P:IbanNet.Iban.Validator">
            <summary>
            Gets or sets the <see cref="T:IbanNet.IIbanValidator"/> used to validate an IBAN.
            </summary>
        </member>
        <member name="M:IbanNet.Iban.ToString(System.String)">
            <summary>Returns a string that represents the current <see cref="T:IbanNet.Iban"/>.</summary>
            <example>
            F => NL91ABNA0417164300
            S => NL91 ABNA 0417 1643 00
            </example>
            <param name="format">The format to use. F = flat, S = partitioned by space.</param>
            <returns>A string that represents the current <see cref="T:IbanNet.Iban"/>.</returns>
        </member>
        <member name="M:IbanNet.Iban.ToString">
            <summary>Returns a string that represents the current <see cref="T:IbanNet.Iban"/>.</summary>
            <returns>A string that represents the current <see cref="T:IbanNet.Iban"/>.</returns>
        </member>
        <member name="M:IbanNet.Iban.Parse(System.String)">
            <summary>
            Parses the specified <paramref name="value"/> into an <see cref="T:IbanNet.Iban"/>.
            </summary>
            <param name="value">The IBAN value to parse.</param>
            <returns>an <see cref="T:IbanNet.Iban"/> if the <paramref name="value"/> is parsed successfully</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when the specified <paramref name="value"/> is null.</exception>
            <exception cref="T:IbanNet.IbanFormatException">Thrown when the specified <paramref name="value"/> is not a valid IBAN.</exception>
        </member>
        <member name="M:IbanNet.Iban.TryParse(System.String,IbanNet.Iban@)">
            <summary>
            Attempts to parse the specified <paramref name="value"/> into an <see cref="T:IbanNet.Iban"/>.
            </summary>
            <param name="value">The IBAN value to parse.</param>
            <param name="iban">The <see cref="T:IbanNet.Iban"/> if the <paramref name="value"/> is parsed successfully.</param>
            <returns>true if the <paramref name="value"/> is parsed successfully, or false otherwise</returns>
        </member>
        <member name="M:IbanNet.Iban.TryParse(System.String,IbanNet.Iban@,IbanNet.IbanValidationResult@)">
            <summary>
            Attempts to parse the specified <paramref name="value"/> into an <see cref="T:IbanNet.Iban"/>.
            </summary>
            <param name="value">The IBAN value to parse.</param>
            <param name="iban">The <see cref="T:IbanNet.Iban"/> if the <paramref name="value"/> is parsed successfully.</param>
            <param name="validationResult">The validation result.</param>
            <returns>true if the <paramref name="value"/> is parsed successfully, or false otherwise</returns>
        </member>
        <member name="M:IbanNet.Iban.Normalize(System.String)">
            <summary>
            Normalizes an IBAN value by removing all whitespace (but does not change character casing).
            </summary>
            <param name="iban">The IBAN value.</param>
            <returns>a normalized IBAN value</returns>
        </member>
        <member name="M:IbanNet.Iban.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <param name="obj">The object to compare with the current object. </param>
            <returns>true if the specified object  is equal to the current object; otherwise, false.</returns>
        </member>
        <member name="M:IbanNet.Iban.GetHashCode">
            <summary>
            Serves as the default hash function.
            </summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="M:IbanNet.Iban.op_Equality(IbanNet.Iban,IbanNet.Iban)">
            <summary>
            Determines whether the <see cref="T:IbanNet.Iban"/>s are equal to each other.
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:IbanNet.Iban.op_Inequality(IbanNet.Iban,IbanNet.Iban)">
            <summary>
            Determines whether the <see cref="T:IbanNet.Iban"/>s are unequal to each other.
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="T:IbanNet.IbanFormatException">
            <summary>
            The exception that is thrown when the format of an IBAN is invalid.
            </summary>
        </member>
        <member name="M:IbanNet.IbanFormatException.#ctor(System.String,IbanNet.IbanValidationResult)">
            <summary>
            Initializes a new instance of the <see cref="T:IbanNet.IbanFormatException"/> class using specified message and validation result.
            </summary>
            <param name="message">The error message.</param>
            <param name="result">The validation result.</param>
        </member>
        <member name="P:IbanNet.IbanFormatException.Result">
            <summary>
            Gets the validation result.
            </summary>
        </member>
        <member name="T:IbanNet.IbanTypeConverter">
            <summary>
            Provides a way of converting an <see cref="T:IbanNet.Iban"/> from and to other types.
            </summary>
        </member>
        <member name="M:IbanNet.IbanTypeConverter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:IbanNet.IbanTypeConverter"/> class.
            </summary>
        </member>
        <member name="M:IbanNet.IbanTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <inheritdoc />
        </member>
        <member name="M:IbanNet.IbanTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <inheritdoc />
        </member>
        <member name="T:IbanNet.IbanValidationResult">
            <summary>
            Represents possible validation results.
            </summary>
        </member>
        <member name="F:IbanNet.IbanValidationResult.Valid">
            <summary>
            The IBAN seems correct.
            </summary>
        </member>
        <member name="F:IbanNet.IbanValidationResult.IllegalCharacters">
            <summary>
            The IBAN contains illegal characters.
            </summary>
        </member>
        <member name="F:IbanNet.IbanValidationResult.UnknownCountryCode">
            <summary>
            The country code is unknown/not supported.
            </summary>
        </member>
        <member name="F:IbanNet.IbanValidationResult.InvalidStructure">
            <summary>
            The structure of the IBAN is incorrect.
            </summary>
        </member>
        <member name="F:IbanNet.IbanValidationResult.InvalidCheckDigits">
            <summary>
            The IBAN check digits are incorrect.
            </summary>
        </member>
        <member name="F:IbanNet.IbanValidationResult.InvalidLength">
            <summary>
            The IBAN has an incorrect length.
            </summary>
        </member>
        <member name="T:IbanNet.IbanValidator">
            <summary>
            Represents the default IBAN validator.
            </summary>
        </member>
        <member name="M:IbanNet.IbanValidator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:IbanNet.IbanValidator"/> class.
            </summary>
        </member>
        <member name="M:IbanNet.IbanValidator.#ctor(System.Lazy{System.Collections.Generic.IReadOnlyCollection{IbanNet.Registry.CountryInfo}})">
            <summary>
            Initializes a new instance of the <see cref="T:IbanNet.IbanValidator"/> class with specified registry.
            </summary>
            <param name="registry">The IBAN registry containing IBAN/BBAN/SEPA information per country.</param>
        </member>
        <member name="P:IbanNet.IbanValidator.SupportedCountries">
            <summary>
            Gets the supported countries.
            </summary>
        </member>
        <member name="M:IbanNet.IbanValidator.Validate(System.String)">
            <summary>
            Validates the specified IBAN for correctness.
            </summary>
            <param name="iban">The IBAN value.</param>
            <returns>a validation result, indicating if the IBAN is valid or not</returns>
        </member>
        <member name="T:IbanNet.IIbanValidator">
            <summary>
            Describes a validator for IBAN.
            </summary>
        </member>
        <member name="M:IbanNet.IIbanValidator.Validate(System.String)">
            <summary>
            Validates the specified IBAN for correctness.
            </summary>
            <param name="iban">The IBAN value to validate.</param>
            <returns>a validation result, indicating if the IBAN is valid or not</returns>
        </member>
        <member name="T:IbanNet.Registry.BankStructure">
            <summary>
            Defines a bank section of a structure.
            </summary>
        </member>
        <member name="M:IbanNet.Registry.BankStructure.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IbanNet.Registry.BankStructure"/> class using specified parameters.
            </summary>
            <param name="structure">The structure.</param>
        </member>
        <member name="T:IbanNet.Registry.BbanStructure">
            <summary>
            Contains information about the BBAN structure.
            </summary>
        </member>
        <member name="M:IbanNet.Registry.BbanStructure.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IbanNet.Registry.StructureSection"/> class using specified parameters.
            </summary>
            <param name="structure">The structure.</param>
        </member>
        <member name="P:IbanNet.Registry.BbanStructure.Bank">
            <summary>
            Gets or sets the bank identifier structure section.
            </summary>
        </member>
        <member name="P:IbanNet.Registry.BbanStructure.Branch">
            <summary>
            Gets or sets the branch identifier structure section.
            </summary>
        </member>
        <member name="T:IbanNet.Registry.BranchStructure">
            <summary>
            Defines a branch section of a structure.
            </summary>
        </member>
        <member name="M:IbanNet.Registry.BranchStructure.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IbanNet.Registry.BranchStructure"/> class using specified parameters.
            </summary>
            <param name="structure">The structure.</param>
        </member>
        <member name="T:IbanNet.Registry.CountryInfo">
            <summary>
            Contains IBAN/BBAN format information about the country.
            </summary>
        </member>
        <member name="M:IbanNet.Registry.CountryInfo.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IbanNet.Registry.CountryInfo"/> class using specified 2 letter ISO region name.
            </summary>
            <param name="name">The 2 letter iso region name.</param>
        </member>
        <member name="P:IbanNet.Registry.CountryInfo.TwoLetterISORegionName">
            <summary>
            Gets or sets the country code.
            </summary>
        </member>
        <member name="P:IbanNet.Registry.CountryInfo.DisplayName">
            <summary>
            Gets or sets the display name.
            </summary>
        </member>
        <member name="P:IbanNet.Registry.CountryInfo.EnglishName">
            <summary>
            Gets or sets the English name.
            </summary>
        </member>
        <member name="P:IbanNet.Registry.CountryInfo.IncludedCountries">
            <summary>
            Gets or sets the list of included countries.
            </summary>
        </member>
        <member name="P:IbanNet.Registry.CountryInfo.Sepa">
            <summary>
            Gets SEPA information.
            </summary>
        </member>
        <member name="P:IbanNet.Registry.CountryInfo.DomesticAccountNumberExample">
            <summary>
            Gets or sets a domestic account number example.
            </summary>
        </member>
        <member name="P:IbanNet.Registry.CountryInfo.Bban">
            <summary>
            Gets or sets the structure of the BBAN.
            </summary>
        </member>
        <member name="P:IbanNet.Registry.CountryInfo.Iban">
            <summary>
            Gets or sets the structure of the IBAN.
            </summary>
        </member>
        <member name="P:IbanNet.Registry.CountryInfo.LastUpdatedDate">
            <summary>
            Gets or sets when this <see cref="T:IbanNet.Registry.CountryInfo"/> was last updated in the Iban Registry.
            </summary>
        </member>
        <member name="M:IbanNet.Registry.CountryInfo.ToString">
            <inheritdoc />
        </member>
        <member name="T:IbanNet.Registry.IbanRegistry">
            <summary>
            The IBAN registry contains IBAN/BBAN/SEPA information for all known IBAN countries.
            </summary>
        </member>
        <member name="M:IbanNet.Registry.IbanRegistry.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:IbanNet.Registry.IbanRegistry" /> class.
            </summary>
        </member>
        <member name="T:IbanNet.Registry.IbanStructure">
            <summary>
            Describes an IBAN structure.
            </summary>
        </member>
        <member name="M:IbanNet.Registry.IbanStructure.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IbanNet.Registry.IbanStructure"/> class using specified parameters.
            </summary>
            <param name="structure">The structure.</param>
        </member>
        <member name="P:IbanNet.Registry.IbanStructure.EffectiveDate">
            <summary>
            Gets or sets the date the IBAN came in effect.
            </summary>
        </member>
        <member name="T:IbanNet.Registry.IStructureSection">
            <summary>
            Describes a section of a structure.
            </summary>
        </member>
        <member name="P:IbanNet.Registry.IStructureSection.Position">
            <summary>
            Gets the position within the structure.
            </summary>
        </member>
        <member name="P:IbanNet.Registry.IStructureSection.Length">
            <summary>
            Gets the section length.
            </summary>
        </member>
        <member name="P:IbanNet.Registry.IStructureSection.Example">
            <summary>
            Gets the section example.
            </summary>
        </member>
        <member name="P:IbanNet.Registry.IStructureSection.Structure">
            <summary>
            Gets the structure.
            </summary>
        </member>
        <member name="T:IbanNet.Registry.SepaInfo">
            <summary>
            Represents SEPA information.
            </summary>
        </member>
        <member name="P:IbanNet.Registry.SepaInfo.IsMember">
            <summary>
            Gets or sets whether this region is a SEPA country.
            </summary>
        </member>
        <member name="P:IbanNet.Registry.SepaInfo.IncludedCountries">
            <summary>
            Gets or sets a list of included SEPA countries.
            </summary>
        </member>
        <member name="T:IbanNet.Registry.StructureSection">
            <summary>
            Defines a section of a structure.
            </summary>
        </member>
        <member name="M:IbanNet.Registry.StructureSection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:IbanNet.Registry.StructureSection"/> class.
            </summary>
        </member>
        <member name="M:IbanNet.Registry.StructureSection.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IbanNet.Registry.StructureSection"/> class using specified parameters.
            </summary>
            <param name="structure">The structure.</param>
        </member>
        <member name="P:IbanNet.Registry.StructureSection.Position">
            <summary>
            Gets or sets the position within the structure.
            </summary>
        </member>
        <member name="P:IbanNet.Registry.StructureSection.Length">
            <summary>
            Gets or sets the section length.
            </summary>
        </member>
        <member name="P:IbanNet.Registry.StructureSection.Example">
            <summary>
            Gets or sets the section example.
            </summary>
        </member>
        <member name="P:IbanNet.Registry.StructureSection.Structure">
            <summary>
            Gets or sets the structure.
            </summary>
        </member>
        <member name="T:IbanNet.ValidationResult">
            <summary>
            Represents the validator result.
            </summary>
        </member>
        <member name="P:IbanNet.ValidationResult.Result">
            <summary>
            <see cref="F:IbanNet.IbanValidationResult.Valid"/> if validation succeeded. Otherwise, indicates the reason of failure. 
            </summary>
        </member>
        <member name="P:IbanNet.ValidationResult.IsValid">
            <summary>
            Gets whether validation is successful.
            </summary>
        </member>
        <member name="P:IbanNet.ValidationResult.Value">
            <summary>
            Gets the validated IBAN.
            </summary>
        </member>
        <member name="P:IbanNet.ValidationResult.Country">
            <summary>
            Gets the country info that matches the iban, if any.
            </summary>
        </member>
        <member name="T:IbanNet.Validation.CachedStructureValidationFactory">
            <summary>
            Represents a cache for validators.
            </summary>
        </member>
        <member name="T:IbanNet.Validation.IStructureValidationFactory">
            <summary>
            Describes a factory which is used to build a validator from a defined pattern/structure.
            </summary>
        </member>
        <member name="M:IbanNet.Validation.IStructureValidationFactory.CreateValidator(System.String,System.String)">
            <summary>
            Creates a validator for specified country using the provided <paramref name="structure" />.
            </summary>
            <param name="twoLetterISORegionName">The country code.</param>
            <param name="structure">The pattern/structure to create a validator for.</param>
            <returns>A validator to use for the given country and structure.</returns>
        </member>
        <member name="T:IbanNet.Validation.IStructureValidator">
            <summary>
            Describes a validator that validates a specific IBAN.
            </summary>
        </member>
        <member name="M:IbanNet.Validation.IStructureValidator.Validate(System.String)">
            <summary>
            Validates the specified <paramref name="iban" />.
            </summary>
            <param name="iban">The IBAN to validate.</param>
            <returns><see langword="true" /> if the IBAN is valid; <see langword="false" /> otherwise.</returns>
        </member>
        <member name="T:IbanNet.Validation.RegexValidator">
            <summary>
            A validator that uses a regex to validate IBAN's.
            </summary>
        </member>
        <member name="M:IbanNet.Validation.RegexValidator.Validate(System.String)">
            <inheritdoc />
        </member>
        <member name="T:IbanNet.Validation.Rules.HasCountryCodeRule">
            <summary>
            Asserts that the IBAN has a country code but does not check the validity of the country code itself.
            </summary>
        </member>
        <member name="T:IbanNet.Validation.Rules.HasIbanChecksumRule">
            <summary>
            Asserts that the IBAN checksum digits are not 00, 01 or 99.
            </summary>
        </member>
        <member name="M:IbanNet.Validation.Rules.HasIbanChecksumRule.Validate(IbanNet.Validation.ValidationContext)">
            <inheritdoc />
        </member>
        <member name="T:IbanNet.Validation.Rules.IIbanValidationRule">
            <summary>
            Describes a validation rule for IBAN.
            </summary>
        </member>
        <member name="M:IbanNet.Validation.Rules.IIbanValidationRule.Validate(IbanNet.Validation.ValidationContext)">
            <summary>
            Validates the IBAN against this rule.
            </summary>
            <param name="context">The validation context.</param>
        </member>
        <member name="T:IbanNet.Validation.Rules.IsMatchingStructureRule">
            <summary>
            Asserts that the IBAN is matching the structure defined for a specific country.
            </summary>
        </member>
        <member name="M:IbanNet.Validation.Rules.IsMatchingStructureRule.Validate(IbanNet.Validation.ValidationContext)">
            <inheritdoc />
        </member>
        <member name="T:IbanNet.Validation.Rules.IsValidCountryCodeRule">
            <summary>
            Asserts that the IBAN has a valid and known country code.
            </summary>
        </member>
        <member name="M:IbanNet.Validation.Rules.IsValidCountryCodeRule.Validate(IbanNet.Validation.ValidationContext)">
            <inheritdoc />
        </member>
        <member name="T:IbanNet.Validation.Rules.IsValidLengthRule">
            <summary>
            Asserts that the IBAN has the correct length as defined for its country.
            </summary>
        </member>
        <member name="M:IbanNet.Validation.Rules.IsValidLengthRule.Validate(IbanNet.Validation.ValidationContext)">
            <inheritdoc />
        </member>
        <member name="T:IbanNet.Validation.Rules.Mod97Rule">
            <summary>
            Asserts that the check digits are valid.
            </summary>
        </member>
        <member name="M:IbanNet.Validation.Rules.Mod97Rule.Validate(IbanNet.Validation.ValidationContext)">
            <inheritdoc />
        </member>
        <member name="T:IbanNet.Validation.Rules.NoIllegalCharactersRule">
            <summary>
            Asserts that the IBAN does not contain any illegal characters.
            </summary>
        </member>
        <member name="M:IbanNet.Validation.Rules.NoIllegalCharactersRule.Validate(IbanNet.Validation.ValidationContext)">
            <inheritdoc />
        </member>
        <member name="T:IbanNet.Validation.Rules.NotNullRule">
            <summary>
            Asserts that the IBAN is not null.
            </summary>
        </member>
        <member name="M:IbanNet.Validation.Rules.NotNullRule.Validate(IbanNet.Validation.ValidationContext)">
            <inheritdoc />
        </member>
        <member name="T:IbanNet.Validation.Rules.RegexRule">
            <summary>
            Asserts that the IBAN matches a specific regular expression.
            </summary>
        </member>
        <member name="P:IbanNet.Validation.Rules.RegexRule.Regex">
            <summary>
            Gets the regex used to test the IBAN.
            </summary>
        </member>
        <member name="M:IbanNet.Validation.Rules.RegexRule.Validate(IbanNet.Validation.ValidationContext)">
            <inheritdoc />
        </member>
        <member name="P:IbanNet.Validation.ValidationContext.Result">
            <summary>
            <see cref="F:IbanNet.IbanValidationResult.Valid"/> if validation succeeded. Otherwise, indicates the reason of failure. 
            </summary>
        </member>
        <member name="P:IbanNet.Validation.ValidationContext.IsValid">
            <summary>
            Gets whether validation is successful.
            </summary>
        </member>
        <member name="P:IbanNet.Validation.ValidationContext.Value">
            <summary>
            Gets the validated iban value.
            </summary>
        </member>
        <member name="P:IbanNet.Validation.ValidationContext.Country">
            <summary>
            Gets the country info that matches the iban, if any.
            </summary>
        </member>
        <member name="T:IbanNet.Validation.SwiftStructureValidationFactory">
            <summary>
            A factory to create validators that are based on the Swift Registry its structure definitions.
            </summary>
        </member>
        <member name="M:IbanNet.Validation.SwiftStructureValidationFactory.CreateValidator(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:IbanNet.Validation.SwiftStructureValidationFactory.GetRegexPattern(System.String)">
            <remarks>
            https://www.swift.com/standards/data-standards/iban
            length
            ! = fixed
            marker
            </remarks>
        </member>
    </members>
</doc>
